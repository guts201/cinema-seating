// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CinemasColumns holds the columns for the "cinemas" table.
	CinemasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "num_row", Type: field.TypeInt64},
		{Name: "num_column", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
	}
	// CinemasTable holds the schema information for the "cinemas" table.
	CinemasTable = &schema.Table{
		Name:       "cinemas",
		Columns:    CinemasColumns,
		PrimaryKey: []*schema.Column{CinemasColumns[0]},
	}
	// MoviesColumns holds the columns for the "movies" table.
	MoviesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "duration", Type: field.TypeUint64},
	}
	// MoviesTable holds the schema information for the "movies" table.
	MoviesTable = &schema.Table{
		Name:       "movies",
		Columns:    MoviesColumns,
		PrimaryKey: []*schema.Column{MoviesColumns[0]},
	}
	// ScreeningsColumns holds the columns for the "screenings" table.
	ScreeningsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "min_distance", Type: field.TypeInt32},
	}
	// ScreeningsTable holds the schema information for the "screenings" table.
	ScreeningsTable = &schema.Table{
		Name:       "screenings",
		Columns:    ScreeningsColumns,
		PrimaryKey: []*schema.Column{ScreeningsColumns[0]},
	}
	// SeatsColumns holds the columns for the "seats" table.
	SeatsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "row", Type: field.TypeInt16},
		{Name: "column", Type: field.TypeInt16},
	}
	// SeatsTable holds the schema information for the "seats" table.
	SeatsTable = &schema.Table{
		Name:       "seats",
		Columns:    SeatsColumns,
		PrimaryKey: []*schema.Column{SeatsColumns[0]},
	}
	// SeatReservationsColumns holds the columns for the "seat_reservations" table.
	SeatReservationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "reserved_at", Type: field.TypeTime},
		{Name: "group_id", Type: field.TypeUUID},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"reserved", "canceled", "pending"}, Default: "pending"},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
	}
	// SeatReservationsTable holds the schema information for the "seat_reservations" table.
	SeatReservationsTable = &schema.Table{
		Name:       "seat_reservations",
		Columns:    SeatReservationsColumns,
		PrimaryKey: []*schema.Column{SeatReservationsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CinemasTable,
		MoviesTable,
		ScreeningsTable,
		SeatsTable,
		SeatReservationsTable,
	}
)

func init() {
}
