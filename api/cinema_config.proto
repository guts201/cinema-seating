syntax = "proto3";

package cinema.config;

option go_package = "cinema/pkg/config;cinema";

import "validate/validate.proto";

message Config {
  Listener listener = 1 [ (validate.rules).message = {required : true} ];
  Logger logger = 2 [ (validate.rules).message = {required : true} ];
  Database database = 3 [ (validate.rules).message = {required : true} ];
}

message Logger {
  enum Level {
    UNSPECIFIED = 0;
    DEBUG       = 1;
    INFO        = 2;
    WARN        = 3;
    ERROR       = 4;
    PANIC       = 5;
    FATAL       = 6;
  }
  Level level = 1;
  bool pretty = 2;
}


message TCPSocket {
  string address = 1 [(validate.rules).string = { min_bytes: 1 }];
  uint32 port    = 2 [(validate.rules).uint32 = { lte: 65535 }];
  bool secure    = 3;
}

message UnixSocket {
  string path = 1 [(validate.rules).string = { min_bytes: 1 }];
}

message Listener {
  oneof socket {
    option (validate.required) = true;

    TCPSocket tcp   = 1;
    UnixSocket unix = 2;
  }
}


message Database {
  string host = 1 [(validate.rules).string = { min_bytes: 1 }];
  uint32 port = 2 [(validate.rules).uint32 = { lte: 65535 }];
  string name = 3 [(validate.rules).string = { min_bytes: 1 }];  // database name

  bool tracing_enabled = 4;
  bool debug           = 5;

  uint32 max_idle_conns     = 6;
  uint32 max_open_conns     = 7;
  uint32 conn_max_life_time = 8;  // minutes
  uint32 conn_max_idle_time = 9;  // minutes

  AuthMethod auth_method = 10;

  // AUTH_METHOD_USERNAME_PASSWORD
  string username = 11 [(validate.rules).string = { min_bytes: 1 }];
  string password = 12;

  // AUTH_METHOD_AWS_IAM
  string aws_region = 13;

  enum AuthMethod {
    AUTH_METHOD_UNSPECIFIED       = 0;
    AUTH_METHOD_NONE              = 1;
    AUTH_METHOD_USERNAME_PASSWORD = 2;
    AUTH_METHOD_AWS_IAM           = 4;
  }
}

message Redis {
  bool enabled = 1;
  string address = 2;
  uint32 ttl = 3;
}